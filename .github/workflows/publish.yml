name: Publish
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  publish-maven-package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Publish to maven
        uses: gradle/gradle-build-action@v2
        env:
          ORG_GRADLE_PROJECT_mizucoffeeRepositoryUsername: ${{ secrets.MAVEN_USERNAME }}
          ORG_GRADLE_PROJECT_mizucoffeeRepositoryPassword: ${{ secrets.MAVEN_PASSWORD }}
        with:
          arguments: publish

  publish-nuget-package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v3

      - name: Setup dotnet 7.0.x
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "7.0.x"

      - name: Apply version
        run: sed -i -e "s/0\.0\.0-SNAPSHOT/$(./gradlew -q printVersion)/" WeddingKanshasaiProtoBuf.csproj

      - name: Install dependencies
        run: dotnet restore

      - name: Build stub codes
        run: dotnet build

      - name: Prepare NuGet
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
          NUGET_SOURCE: ${{ secrets.NUGET_SOURCE }}
        run: nuget setapikey $NUGET_API_KEY -source $NUGET_SOURCE

      - name: Publish to NuGet Repository
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
          NUGET_SOURCE: ${{ secrets.NUGET_SOURCE }}
        run: dotnet nuget push bin/Debug/*.nupkg --api-key $NUGET_API_KEY --source $NUGET_SOURCE

  publish-npm-package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v3

      - name: Install Protoc
        uses: arduino/setup-protoc@v2

      - name: Install protoc-gen-js
        run: |
          curl -Lo protobuf-javascript.zip https://github.com/protocolbuffers/protobuf-javascript/releases/download/v3.21.2/protobuf-javascript-3.21.2-linux-x86_64.zip
          unzip -j protobuf-javascript.zip bin/protoc-gen-js -d /usr/local/bin
          rm protobuf-javascript.zip
          chmod +x /usr/local/bin/protoc-gen-js

      - name: Install protoc-gen-grpc-web
        run: |
          curl -Lo protoc-gen-grpc-web https://github.com/grpc/grpc-web/releases/download/1.4.2/protoc-gen-grpc-web-1.4.2-linux-x86_64
          mv protoc-gen-grpc-web /usr/local/bin/protoc-gen-grpc-web
          chmod +x /usr/local/bin/protoc-gen-grpc-web

      - name: Setup node 18.x
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      - name: Install dependencies
        run: npm install

      - name: Apply version
        run: sed -i -e "s/0\.0\.0-SNAPSHOT/$(./gradlew -q printVersion)/" package.json

      - name: Build stub codes
        run: |
          protoc -Isrc/main/proto/ --js_out=import_style=commonjs,binary:. --grpc-web_out=import_style=typescript,mode=grpcwebtext:. $(find src/main/proto -iname "*.proto")

      - name: Publish to NPM Repository
        env:
          NPM_REGISTRY: ${{ secrets.NPM_REGISTRY }}
          NPM_SECRET: ${{ secrets.NPM_SECRET }}
        run: |
          echo //$NPM_REGISTRY/:_auth=$NPM_SECRET >> .npmrc
          echo registry=https://$NPM_REGISTRY/ >> .npmrc
          echo always-auth=true >> .npmrc
          npm publish

  deploy-document:
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.20'

      - name: Install Protoc
        uses: arduino/setup-protoc@v2

      - name: Prepare Protoc gen doc
        run: go install github.com/pseudomuto/protoc-gen-doc/cmd/protoc-gen-doc@latest

      - name: Generate documents
        run: |
          protoc --doc_out=./doc --doc_opt=html,index.html --proto_path=src/main/proto/ $(find src/main/proto -iname "*.proto")

      - name: Setup Pages
        uses: actions/configure-pages@v1

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: './doc'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
